# This config was automatically generated from your source code
# Stacks detected: deps:python:.,file:manage.py:eCommerceWebsite
#version: 2.1
#orbs:
#  python: circleci/python@2.1.1
#jobs:
#  build:
#    docker:
#      - image: circleci/python:3.9
  #test-python:
  #  executor: python/default
#    working_directory: C:/Users/osama/Desktop/ProjectX/eCommerceWebsite/eCommerceWebsite
    # Install dependencies and run tests
  #  docker:
  #    - image: cimg/base:stable
#    steps:
#      - checkout
      #- python/install-packages:
      #    pkg-manager: pip
      #- run:
      #- persist_to_workspace:
      #    root: eCommerceWebsite/eCommerceWebsite
      #    paths: eCommerceWebsite/eCommerceWebsite
#      - run:
#          name: Install dependencies
#          command: pip install -r requirements.txt
      #- python/install-packages
#      - run:
#      
#          name: Run tests
#          command: python manage.py test eCommerceWebsite
      
      
  #deploy:
    # This is an example deploy job, not actually used by the workflow
  #  docker:
  #    - image: cimg/base:stable
  #  steps:
      # Replace this with steps to deploy to users
  #    - run:
  #        name: deploy
  #        command: '#e.g. ./deploy.sh'
#workflows:
#  build:
#    jobs:
      #- test-python
#      - build
    # - deploy:
    #     requires:
    #       - test-python


# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  python: circleci/python@2.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build_and_test: # this can be any name you choose
    #executor: python/default # use the default executor defined within the orb
    executor:
      name: python/default
  # use Python 3.9
      tag: '3.9'
      
    steps:

      - checkout # checkout source code
      - restore_cache:
          keys:
            - pip-cache-{{ checksum "requirements.txt" }}
      - run:
          name: Setup Python environment
          command: |
            pyenv global 3.9.19  # Activate specific Python version if using pyenv
          #  python -m pip install --upgrade pip
      - python/install-packages:
          pkg-manager: pip
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
      - save_cache:
          key: pip-cache-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/.cache/pip      
      - run:
          name: Run 
          command: ls ~/project/eCommerceWebsite
      - run:
          name: Run 2
          command: cd ~/project/eCommerceWebsite         
      - run:
          name: Run tests
          command: |
             cd ~/project/eCommerceWebsite
             python manage.py test 
      
      


#jobs2:
#  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      - checkout
#      - run:
#          name: "Say hello"
#          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - build_and_test
    #jobs2:
    #  - say-hello


